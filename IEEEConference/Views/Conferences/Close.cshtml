@model IEEEConference.Models.ViewModel_Conference

@{
    ViewBag.Title = "CloseConfirmed";
}

<h2>CloseConfirmed</h2>
<dl class="dl-horizontal">
    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.Code)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.Code)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.Category)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.Category)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.ConferenceYear)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.ConferenceYear)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.Committees)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.Committees)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.Venue)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.Venue)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.City)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.City)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.Country)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.Country)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.HomeUrl)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.HomeUrl)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.Contact)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.Contact)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.Style)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.Style)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.PeriodFrom)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.PeriodFrom)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.PeriodTo)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.PeriodTo)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.Confernece.RevokeReason)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.Confernece.RevokeReason)
    </dd>





    <dt>
        @Html.DisplayNameFor(model => Model.NumberOfAcceptedPaper)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.NumberOfAcceptedPaper)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.NumberOfAcceptedPayment)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.NumberOfAcceptedPayment)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.NumberOfSubmittedPaper)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.NumberOfSubmittedPaper)
    </dd>

    <dt>
        @Html.DisplayNameFor(model => Model.NumberOfSubmittedPayment)
    </dt>

    <dd>
        @Html.DisplayFor(model => Model.NumberOfSubmittedPayment)
    </dd>
</dl>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Conference</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Confernece.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Confernece.RevokeReason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Confernece.RevokeReason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Confernece.RevokeReason, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to Index", "Index")
</div>
